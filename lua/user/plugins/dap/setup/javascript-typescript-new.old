return {
    -- https://stackoverflow.com/questions/78455585/correct-setup-for-debugging-nextjs-app-inside-neovim-with-dap
    -- https://github.com/mfussenegger/nvim-dap/issues/1411
    {
        'mfussenegger/nvim-dap',
        event = 'VeryLazy',
        dependencies = {
            {
                'microsoft/vscode-js-debug',
                -- build = "npm install --legacy-peer-deps && npm run compile",
                build = 'npm install --legacy-peer-deps && npx gulp vsDebugServerBundle && mv dist out',
            },
        },
        config = function()
            -- local _, dapjs = pcall(require, 'dap-vscode-js')
            local dap = require('dap')

            dap.adapters['pwa-node'] = {
                type = 'server',
                host = 'localhost',
                port = '${port}',
                executable = {
                    command = 'node',
                    -- ðŸ’€ Make sure to update this path to point to your installation
                    args = {
                        -- '/path/to/js-debug/src/dapDebugServer.js',
                        vim.fn.stdpath('data')
                            .. '/lazy/vscode-js-debug/out/dist/src/vsDebugServer.js',
                        '${port}',
                    },
                },
            }

            -- dapjs.setup({
            --     adapters = {
            --         'pwa-node',
            --         'pwa-chrome',
            --         'pwa-msedge',
            --         'node-terminal',
            --         'pwa-extensionHost',
            --     },
            --
            --     debugger_path = vim.fn.stdpath('data')
            --         .. '/lazy/vscode-js-debug',
            --     -- debugger_path = os.getenv('HOME')
            --     --     .. '/.local/share/nvim/lazy/vscode-js-debug',
            -- })

            for _, language in ipairs({
                'typescript',
                'javascript',
                'typescriptreact',
                'javascriptreact',
            }) do
                dap.configurations[language] = {
                    {
                        type = 'pwa-chrome',
                        request = 'launch',
                        name = 'Launch Chrome against localhost vite project',
                        url = 'http://localhost:4200',
                        webRoot = '${workspaceFolder}/src',
                        runtimeArgs = {
                            '--remote-debugging-port=9222',
                        },
                        sourceMaps = true,
                    },
                    {
                        type = 'pwa-chrome',
                        request = 'launch',
                        name = 'Launch Chrome against localhost vite project HTTPS',
                        url = 'https://localhost:4200',
                        webRoot = '${workspaceFolder}/src',
                        runtimeArgs = {
                            '--remote-debugging-port=9222',
                        },
                        sourceMaps = true,
                    },
                    {
                        type = 'pwa-node',
                        request = 'launch',
                        name = 'Launch file',
                        program = '${file}',
                        cwd = '${workspaceFolder}',
                    },
                    {
                        type = 'pwa-node',
                        request = 'launch',
                        name = 'Launch Deno file',
                        runtimeExecutable = 'deno',
                        runtimeArgs = {
                            'run',
                            '--inspect-wait',
                            '--allow-all',
                        },
                        program = '${file}',
                        cwd = '${workspaceFolder}',
                        attachSimplePort = 9229,
                    },
                    {
                        type = 'pwa-node',
                        request = 'attach',
                        name = 'Attach',
                        processId = require('dap.utils').pick_process,
                        cwd = '${workspaceFolder}',
                    },
                    {
                        type = 'pwa-node',
                        request = 'attach',
                        name = 'Auto Attach Node to --inspect',
                        cwd = vim.fn.getcwd(),
                        protocol = 'inspector',
                    },
                    {
                        type = 'pwa-node',
                        request = 'launch',
                        name = 'Debug Jest Tests',
                        -- trace = true, -- include debugger info
                        runtimeExecutable = 'node',
                        runtimeArgs = {
                            './node_modules/jest/bin/jest.js',
                            '--runInBand',
                        },
                        rootPath = '${workspaceFolder}',
                        cwd = '${workspaceFolder}',
                        console = 'integratedTerminal',
                        internalConsoleOptions = 'neverOpen',
                    },
                    {
                        type = 'pwa-node',
                        request = 'launch',
                        name = 'Debug Mocha Tests',
                        -- trace = true, -- include debugger info
                        runtimeExecutable = 'node',
                        runtimeArgs = {
                            './node_modules/mocha/bin/mocha.js',
                        },
                        rootPath = '${workspaceFolder}',
                        cwd = '${workspaceFolder}',
                        console = 'integratedTerminal',
                        internalConsoleOptions = 'neverOpen',
                    },
                }
            end
        end,
    },
}
